(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{connect:()=>h,init:()=>d});const n=window.Automerge,o=window.peerjs;var c,a,i,r=function(){console.log((new Date).getTime(),...arguments)};class s{peer;connections=new Map;doc;afterChangeCallback;constructor(e,t,c){this.afterChangeCallback=t,this.peer=new o.Peer,this.peer.on("open",e),this.peer.on("connection",(e=>{r("Received connection from",e.peer),e.on("data",(t=>{this.receiveHandler(e,t)})),this.connections.set(e,n.initSyncState())})),this.doc=n.from(c)}changeDoc(e,t){r("Changing",e),this.doc=n.change(this.doc,e,t),this.sync()}connect(e){r("Connecting to",e);let t=this.peer.connect(e);t.on("open",(()=>{this.connections.set(t,n.initSyncState()),t.send({type:"SyncRequest"})})),t.on("data",(e=>{this.receiveHandler(t,e)}))}sync(){for(let[t,o]of this.connections.entries()){r("Syncing with",t.peer);let c=null;[o,c]=n.generateSyncMessage(this.doc,o),this.connections.set(t,o),c?t.send({type:"Changes",data:(e=c,btoa(String.fromCharCode.apply(null,e)))}):r("Sync not neccessary")}var e}receiveHandler(e,t){switch(r("Receiving information from",e.peer),t.type){case"Changes":r("Applying changes"),t.data=new Uint8Array((o=t.data,atob(o).split("").map((function(e){return e.charCodeAt(0)}))));let c=null;[this.doc,c]=n.receiveSyncMessage(this.doc,this.connections.get(e),t.data),this.connections.set(e,c),this.sync(),this.afterChangeCallback(this.doc);break;case"SyncRequest":this.sync()}var o}}var l=!1;function d(e){c=new s(e.onOpen,g,{text:[]}),a=e.textarea,i=e.onUpdate||function(){},a.addEventListener("beforeinput",p),l=!0}function h(e){if(!l)throw new Error("Make sure to call init before.");if(""!=a.value)throw new Error("Ensure that the textarea is empty before connecting");c.connect(e)}function p(e){c.changeDoc("Update text",(t=>{switch(e.inputType){case"insertText":f(t.text),u(t.text,e.data);break;case"insertLineBreak":f(t.text),u(t.text,"\n");break;case"deleteContentBackward":f(t.text)||t.text.splice(a.selectionStart-1,1);break;case"deleteContentForward":f(t.text)||t.text.splice(a.selectionStart,1);break;case"insertFromPaste":f(t.text),e.data.split("").reverse().forEach((e=>u(t.text,e)))}}))}function u(e,t){let n=a.selectionStart;n<e.length?e.insertAt(n,t):e.push(t)}function f(e){return a.selectionEnd-a.selectionStart!=0&&(e.splice(a.selectionStart,a.selectionEnd-a.selectionStart),!0)}function g(e){let t=a.selectionStart,n=a.selectionEnd;a.value="",e.text.forEach((e=>{a.value+=e})),a.selectionStart=t,a.selectionEnd=n,i()}window.collaborativeTextarea=t})();